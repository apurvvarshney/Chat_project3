{"version":3,"sources":["LoginForm.js","Compose.js","MessageList.js","UserList.js","App.jsx","reportWebVitals.js","index.js"],"names":["get","LoginForm","props","classref","id","onKeyUp","submit_login","ref","elem","login_window","class","url","type","username","password","sse_stream","object_child","start","stream","EventSource","sessionStorage","getItem","stream_token","addEventListener","event","data","JSON","parse","users","add","user","users_database_update","print_msg","date_format","status","Set","message","delete","close","message_token","message_list","innerHTML","login_page","Compose","send_message","element","MessageList","message_database","map","item","UserList","user_database","Array","from","sort","object","App","state","database_update","bind","this","timestamp","date","Date","toLocaleDateString","toLocaleTimeString","message_text","push","setState","disabled","value","connect_status","classList","remove","style","display","request","XMLHttpRequest","form","FormData","append","setItem","open","onreadystatechange","readyState","responseText","alert","send","key","setRequestHeader","target","getResponseHeader","login","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.29a99973.chunk.js","sourcesContent":["import React from 'react'\r\nvar get = null;\r\nexport const LoginForm = function(props) {\r\n    get = props.classref;\r\n    return (\r\n        <div id=\"login-modal\" onKeyUp={get.submit_login} ref={elem => get.login_window = elem}>\r\n        <div class=\"content\">\r\n            <h2>Login Window</h2>\r\n            <div>\r\n                <label>URL<input id=\"url\" ref={elem => get.url = elem} type=\"text\"/></label>\r\n            </div>\r\n            <div>\r\n                <label>Username<input id=\"username\" ref={elem => get.username = elem} type=\"text\"/></label>\r\n            </div>\r\n            <div>\r\n                <label>Password<input id=\"password\" ref={elem => get.password = elem} type=\"password\"/></label>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const sse_stream = function() {\r\n    const object_child = get;\r\n    object_child.start();\r\n    get.stream = new EventSource(\r\n        sessionStorage.getItem(\"url\") + \"/stream/\" + get.stream_token\r\n    );\r\n    get.stream.addEventListener(\r\n        \"Join\",\r\n        (event)=> {\r\n            var data = JSON.parse(event.data);\r\n            object_child.users.add(data.user);\r\n            object_child.users_database_update();\r\n            object_child.print_msg(object_child.date_format(data[\"created\"]) + \" JOIN: \" + data.user);\r\n        },\r\n        false\r\n    );\r\n    get.stream.addEventListener(\r\n        \"ServerStatus\",\r\n        (event) =>{\r\n            var data = JSON.parse(event.data);\r\n            object_child.print_msg(object_child.date_format(data[\"created\"]) + \" STATUS: \" + data.status);\r\n        },\r\n        false\r\n    );\r\n    get.stream.addEventListener(\r\n        \"Users\",\r\n        (event) =>{            \r\n            var data = JSON.parse(event.data);\r\n            object_child.users = new Set(data.users);\r\n            object_child.users_database_update();\r\n        },\r\n        false\r\n    );\r\n    get.stream.addEventListener(\r\n        \"Message\",\r\n        (event)=> {\r\n            var data = JSON.parse(event.data);\r\n            object_child.print_msg(object_child.date_format(data[\"created\"]) + \" (\" + data.user + \") \" + data.message);\r\n        },\r\n        false\r\n    );\r\n    get.stream.addEventListener(\r\n        \"Part\",\r\n        (event)=> {\r\n            var data = JSON.parse(event.data);\r\n            object_child.users.delete(data.user);\r\n            object_child.users_database_update();\r\n            object_child.print_msg(object_child.date_format(data[\"created\"]) + \" PART: \" + data.user);\r\n        },\r\n        false\r\n    );\r\n    get.stream.addEventListener(\r\n        \"Disconnect\",\r\n        ()=> {\r\n            object_child.stream.close();\r\n            object_child.close();\r\n            object_child.message_token = null;\r\n            object_child.stream_token = null;\r\n            object_child.message_list.innerHTML = \"\";\r\n            object_child.login_page();\r\n        },\r\n        false\r\n    );\r\n}","import React from 'react'\r\nexport const Compose = function(props) {\r\n    const get = props.classref;\r\n    return (\r\n        <input id=\"message\" onKeyUp={get.send_message} ref={element => get.message = element} type=\"text\"/>\r\n    );\r\n}","import React from 'react'\r\nexport const MessageList = function(props) {\r\n    const get = props.classref;\r\n    return (\r\n        <div id=\"chat\" ref={element => get.message_database = element}>\r\n            <ul>{(get.message_list).map(item => (\r\n                <li>\r\n                    {item}\r\n                </li>))}\r\n            </ul>\r\n        </div>\r\n    );\r\n}","import React from 'react'\r\nexport const UserList = function(props) {\r\n    const get = props.classref;\r\n    return (\r\n        <ul id=\"users\" ref={element => get.user_database = element} >\r\n        {Array.from(get.users).sort().map(item => (\r\n            <li>\r\n                {item} \r\n            </li>))}\r\n        </ul>\r\n    );\r\n}","// Some links I referred to:\r\n// https://reactnative.dev/docs/intro-react (good fundamentals!!)\r\n// https://auth0.com/blog/developing-real-time-web-applications-with-server-sent-events/\r\n// https://javascript.plainenglish.io/react-native-local-notifications-with-server-sent-events-e1df2d2e3ffa\r\n// https://www.freecodecamp.org/news/how-to-build-a-react-js-chat-app-in-10-minutes-c9233794642b/\r\n// https://marmelab.com/blog/2020/10/02/build-a-chat-application-using-sveltejs-and-sse.html\r\n\r\nimport { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport {LoginForm, sse_stream} from \"./LoginForm.js\";\r\nimport {Compose} from \"./Compose.js\";\r\nimport {MessageList} from \"./MessageList.js\";\r\nimport {UserList} from \"./UserList.js\";\r\n\r\n\r\nvar object = null;\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      database_update: true\r\n    };\r\n    this.submit_login = this.submit_login.bind(this);\r\n    this.send_message = this.send_message.bind(this);\r\n    object = this;\r\n  };\r\n\r\n  stream = null;\r\n  users = {};\r\n  message_token = null;\r\n  stream_token = null;\r\n  message_list = [];\r\n\r\n  componentDidMount() { // (read)https://reactjs.org/docs/react-component.html#componentdidmount\r\n    if (this.message_token === null) {\r\n        this.close();\r\n        this.login_page();\r\n    } else {\r\n        sse_stream();\r\n    }\r\n  }\r\n\r\n  date_format(timestamp) {\r\n    var date = new Date(timestamp * 1000);\r\n    return date.toLocaleDateString(\"en-US\") + \" \" + date.toLocaleTimeString(\"en-US\");\r\n  }\r\n  \r\n  print_msg(message_text) {\r\n    object.message_list.push(message_text);\r\n    this.setState(({database_update})=>({['database_update']:!database_update}));\r\n  }\r\n\r\n  start() {\r\n    this.message.disabled = false;\r\n    this.message.value = \"\";\r\n    this.connect_status.classList.remove(\"disconnected\");\r\n  }\r\n  \r\n  close() {\r\n    this.users = new Set();\r\n    this.users_database_update();\r\n    this.message.disabled = true;\r\n    this.connect_status.classList.add(\"disconnected\");\r\n  }\r\n\r\n  login_page() {\r\n    this.url.value = sessionStorage.getItem(\"url\");\r\n    this.login_window.style.display = \"block\";    //https://www.telerik.com/blogs/how-to-show-and-hide-elements-in-react\r\n  }\r\n\r\n  users_database_update() {\r\n    this.setState(({database_update})=>({['database_update']:!database_update}));\r\n  }\r\n\r\n  login() {\r\n      var request = new XMLHttpRequest(); //(??)https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest\r\n      var form = new FormData();\r\n      form.append(\"password\", this.password.value);\r\n      form.append(\"username\", this.username.value);\r\n      sessionStorage.setItem(\"url\", this.url.value);\r\n      request.open(\"POST\", sessionStorage.getItem(\"url\") + \"/login\");\r\n      request.onreadystatechange = function() {\r\n          if (this.readyState !== 4)\r\n            return;\r\n          if (this.status === 201) {\r\n              object.login_window.style.display = \"none\";\r\n              object.password.value = \"\";\r\n              object.username.value = \"\";\r\n              const data = JSON.parse(this.responseText);\r\n              object.stream_token = data.stream_token;\r\n              object.message_token = data.message_token;\r\n              sse_stream();\r\n          }\r\n          else if (this.status === 403) {\r\n              alert(\"Invalid username/password\");\r\n          }\r\n          else if (this.status === 409)\r\n          {\r\n              alert(object.username.value + \" is already logged in\");\r\n          }\r\n          else {\r\n              alert(\"Unable to login\");\r\n          }\r\n      };\r\n      request.send(form);\r\n  }\r\n\r\n  send_message(event) {\r\n    var form = new FormData();\r\n    var request = new XMLHttpRequest();\r\n    if (this.message_token === null || event.key !== 'Enter')\r\n      return;\r\n    if (this.message.value === \"\")\r\n      return;\r\n    form.append(\"message\", this.message.value);\r\n    request.open(\"POST\", sessionStorage.getItem(\"url\") + \"/message\");\r\n    request.setRequestHeader(\r\n        \"Authorization\",\"Bearer \" + this.message_token\r\n    );\r\n    request.onreadystatechange = (event)=> {\r\n        if (event.target.readyState === 4 && event.target.status !== 403 && this.message_token != null) {\r\n            this.message_token = event.target.getResponseHeader(\"token\");\r\n        }\r\n    }\r\n    request.send(form);\r\n    this.message.value = \"\";\r\n  }\r\n\r\n  submit_login(event) {\r\n    if (this.message_token !== null || event.key !== 'Enter')\r\n            return;\r\n    this.login();\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <title>Project 3</title>\r\n        <section id=\"container\">\r\n          <h2 id=\"title\" ref={element => this.connect_status = element} class=\"disconnected\">CS 291A Chat Server</h2>\r\n          <div id=\"window\">                \r\n            <MessageList classref={this}/>\r\n            <div id=\"user_window\">\r\n              <h2>Users Online</h2>\r\n              <UserList classref={this}/>\r\n            </div>\r\n          </div>\r\n          <Compose classref={this}/>\r\n        </section>\r\n        <LoginForm classref={this}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}